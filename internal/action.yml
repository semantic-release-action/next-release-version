---
name: next-semantic-release-version
description: Calculate your project's next semantic-release version number

# Use a composite action for access to github.action_path
# (which is only supported in composite actions)

outputs:
  new-release-published:
    description: Indicates whether a new release will be published. The value is a string, either 'true' or 'false'.
    value: ${{ steps.get-next-version.outputs.new-release-published }}
  new-release-version:
    description: If a new release will be published, the version of the new release. The value is a string, for example '1.3.0'.
    value: ${{ steps.get-next-version.outputs.new-release-version }}

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        # Fetch all history and tags for calculating next semantic version
        fetch-depth: 0

    - run: |
        : configure working directory
        echo "node_workdir=${{ runner.temp }}/.semantic-release-action_next-release-version/" >> "$GITHUB_ENV"
      shell: bash

    - run: |
        : configure Node.js path
        echo NODE_PATH="$node_workdir${NODE_PATH:+":$NODE_PATH"}" >> "$GITHUB_ENV"
      shell: bash

    - run: |
        : install semantic-release package manifest
        mkdir -p "$node_workdir"
        cp "${{ github.action_path }}/package.json" "${{ github.action_path }}/package-lock.json" "$node_workdir/"
      shell: bash

    - name: Configure Node.js
      uses: actions/setup-node@v3
      with:
        node-version: lts/*

    - name: Cache action npm dependencies
      uses: actions/cache@v3
      id: cache-node-modules
      with:
        path: ${{ runner.temp }}/.semantic-release-action_next-release-version/node_modules
        key: semantic-release-action/next-release-version-${{ runner.os }}-node-${{ hashFiles('${{ github.action_path }}/package-lock.json') }}

    - if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: |
        : install semantic-release
        npm ci --ignore-scripts --loglevel error
      working-directory: ${{ env.node_workdir }}
      shell: bash

    - id: get-next-version
      run: |
        : calculate next semantic-release version
        $node_workdir/node_modules/.bin/semantic-release \
          --dry-run \
          --plugins semantic-release-export-data \
          --verify-conditions semantic-release-export-data \
          --generate-notes semantic-release-export-data
      shell: bash
